// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Models;

#nullable disable

namespace Ecommerce.Migrations
{
    [DbContext(typeof(EComContext))]
    partial class EComContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product ID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Cart__3214EC27F57AFA38");

                    b.HasIndex("ProductId");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("WebAPI.Models.Discount", b =>
                {
                    b.Property<bool>("MembershipType")
                        .HasColumnType("bit")
                        .HasColumnName("Membership Type");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Discount1")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("Discount%");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("Modified At");

                    b.HasKey("MembershipType")
                        .HasName("PK__Discount__65D16264C60AAFE8");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("WebAPI.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Order ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("Modified At");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product ID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("ReasonForCancellation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Reason for Cancellation");

                    b.HasKey("OrderId")
                        .HasName("PK__Order De__81BDAE1E552627B1");

                    b.HasIndex("ProductId");

                    b.ToTable("Order Details", (string)null);
                });

            modelBuilder.Entity("WebAPI.Models.OrderSummary", b =>
                {
                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Invoice Amount");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("Modified At");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order ID");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Payment Type");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Tax Amount");

                    b.Property<decimal?>("TotalAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(20, 2)")
                        .HasColumnName("Total Amount")
                        .HasComputedColumnSql("(([Invoice Amount]+[Tax Amount])-[Discount])", false);

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User ID");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Order Summary", (string)null);
                });

            modelBuilder.Entity("WebAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Product ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int")
                        .HasColumnName("Available Quantity");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("Category ID");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("Modified At");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Product Description");

                    b.Property<string>("ProductImage")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Product Image");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Product Name");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(2, 1)");

                    b.HasKey("ProductId")
                        .HasName("PK__Products__AF0FD00BD433A4E9");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WebAPI.Models.ProductCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("Category Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("Modified At");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId")
                        .HasName("PK__ProductC__788261CC1D8521BF");

                    b.ToTable("ProductCategory", (string)null);
                });

            modelBuilder.Entity("WebAPI.Models.RefundDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order ID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product ID");

                    b.Property<decimal>("RefundAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Refund Amount");

                    b.Property<string>("RefundStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Refund Status");

                    b.HasIndex("OrderId");

                    b.ToTable("RefundDetails");
                });

            modelBuilder.Entity("WebAPI.Models.Sale", b =>
                {
                    b.Property<DateTime>("Month")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SalesAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Sales Amount");

                    b.Property<DateTime>("Year")
                        .HasColumnType("datetime2");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("WebAPI.Models.TaxCalculation", b =>
                {
                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Tax%");

                    b.ToTable("TaxCalculation", (string)null);
                });

            modelBuilder.Entity("WebAPI.Models.UserDetail", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("MembershipType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("Membership Type");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("Modified At");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("user");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__UserDeta__1788CC4C93743731");

                    b.HasIndex("MembershipType");

                    b.HasIndex(new[] { "Phone" }, "UQ__UserDeta__5C7E359E9BA166E4")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__UserDeta__A9D105349E6DF4BC")
                        .IsUnique();

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("WebAPI.Models.Cart", b =>
                {
                    b.HasOne("WebAPI.Models.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Cart__Product ID__628FA481");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebAPI.Models.OrderDetail", b =>
                {
                    b.HasOne("WebAPI.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Order Det__Produ__5812160E");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebAPI.Models.OrderSummary", b =>
                {
                    b.HasOne("WebAPI.Models.OrderDetail", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Order Sum__Order__5EBF139D");

                    b.HasOne("WebAPI.Models.UserDetail", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Order Sum__User __5FB337D6");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.Models.Product", b =>
                {
                    b.HasOne("WebAPI.Models.ProductCategory", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Products__Catego__3A81B327");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebAPI.Models.RefundDetail", b =>
                {
                    b.HasOne("WebAPI.Models.OrderDetail", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__RefundDet__Order__6477ECF3");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("WebAPI.Models.UserDetail", b =>
                {
                    b.HasOne("WebAPI.Models.Discount", "MembershipTypeNavigation")
                        .WithMany("UserDetails")
                        .HasForeignKey("MembershipType")
                        .HasConstraintName("FK__UserDetai__Membe__5535A963");

                    b.Navigation("MembershipTypeNavigation");
                });

            modelBuilder.Entity("WebAPI.Models.Discount", b =>
                {
                    b.Navigation("UserDetails");
                });

            modelBuilder.Entity("WebAPI.Models.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("WebAPI.Models.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
